---

- name: Set user managed scripts dir
  set_fact:
    user_sh_profile_dir: .profile.d
    user_sh_rc_dir: .zshrc.d

- name: Delete {{ user_sh_rc_dir }} directory
  file:
    path: "{{ ansible_user_dir }}/{{ user_sh_rc_dir }}"
    state: absent
  when: initialize | bool

- name: Create {{ user_sh_rc_dir }} directory
  file:
    path: "{{ ansible_user_dir }}/{{ user_sh_rc_dir }}"
    state: directory

- name: Delete {{ user_sh_profile_dir }} directory
  file:
    path: "{{ ansible_user_dir }}/{{ user_sh_profile_dir }}"
    state: absent
  when: initialize | bool

- name: Create {{ user_sh_profile_dir }} directory
  file:
    path: "{{ ansible_user_dir }}/{{ user_sh_profile_dir }}"
    state: directory

- name: Initialize ~/.zprofile
  template:
    src: zprofile.j2
    dest: "{{ ansible_user_dir }}/.zprofile"
  when: initialize | bool

- name: Initialize ~/.zshrc
  template:
    src: zshrc.j2
    dest: "{{ ansible_user_dir }}/.zshrc"
  when: initialize | bool

- name: Make sure ~/.zprofile loads user-managed exports
  blockinfile:
    path: "{{ ansible_user_dir }}/.zprofile"
    marker: "# {mark} USER MANAGED EXPORTS"
    insertbefore: BOF
    create: true
    block: |
      if [ -d ~/{{ user_sh_profile_dir }} ]; then
          for profile in ~/{{ user_sh_profile_dir }}/*(N); do
              if [ -f "$profile" ]; then
                  source "$profile"
              fi
          done
      fi
      unset profile

- name: Make sure ~/.zshrc loads user-managed scripts
  blockinfile:
    path: "{{ ansible_user_dir }}/.zshrc"
    marker: "# {mark} USER MANAGED ALIASES AND FUNCTIONS"
    insertbefore: BOF
    create: true
    block: |
      if [ -d ~/{{ user_sh_rc_dir }} ]; then
          for rc in ~/{{ user_sh_rc_dir }}/*(N); do
              if [ -f "$rc" ]; then
                  source "$rc"
              fi
          done
      fi
      unset rc

- name: Run .profile.d exports role
  include_role:
    name: config_sh_exports
  vars:
    sh_shell: zsh
    sh_exports: "{{ config_zsh_exports }}"
  when: config_zsh_exports is defined

- name: Run .zprofile config roles
  include_tasks: config.yml
  vars:
    sh_shell: zsh
    sh_config_file: .zprofile
  with_items: "{{ config_zsh_profile_roles }}"
  loop_control:
    loop_var: config
  when: config_zsh_profile_roles is defined

- name: Run .zshrc config roles
  include_tasks: config.yml
  vars:
    sh_shell: zsh
    sh_config_file: .zshrc
  with_items: "{{ config_zsh_rc_roles }}"
  loop_control:
    loop_var: config
  when: config_zsh_rc_roles is defined
